<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.pluginmain" >

    <!-- 连接网络权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- 允许程序录制音频 -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <!-- 允许读取电话的状态 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!-- 允许使用PowerManager的 WakeLocks保持进程在休眠时从屏幕消失 -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- 允许程序访问有关的网络信息 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 允许程序改变网络连接状态 -->
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <!-- 允许一个程序获取信息有关当前或最近运行的任务，一个缩略的任务状态，是否活动等等 -->
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- 允许程序访问Wi-Fi网络状态信息 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <!-- 现在你可以在你的Activity中使用以下代码改变或提高任何线程的优先级 -->
    <uses-permission android:name="android.permission.RAISED_THREAD_PRIORITY" />
    <!-- 允许应用写（非读）用户的外部存储器 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <!-- 允许一个程序访问CellID或WiFi来获取粗略的位置 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!-- 允许一个程序访问精良位置(如GPS) -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- 允许程序连接到已配对的蓝牙设备 -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <!-- 允许程序读取所有者数据 -->
    <uses-permission android:name="android.permission.READ_OWNER_DATA" />
    <!-- 允许一个程序写入但不读取所有者数据 -->
    <uses-permission android:name="android.permission.WRITE_OWNER_DATA" />
    <!-- 读取联系人 -->
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <!-- 有关系统设置的权限，如快捷方法等 -->
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
    <!-- 悬浮窗权限 -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <!-- 自启权限 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- 相机权限-->
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />

    <application
        android:name=".MyApplication"
        android:icon="@mipmap/cust_ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:theme="@style/ShareTheme"
        android:requestLegacyExternalStorage="true"
        android:usesCleartextTraffic="true">

        <!--
            targetSdkVersion过高时在build.gradle里面加useLibrary 'org.apache.http.legacy'配置不会生效
            所以需要写死在manifest里面。而且这个包在7.x上如果不加uses-library，系统也会自动加到bootclassloader里面，
            但是9.x和10.x不会自动加到bootclassloader里面，需要主动在manifest里面申请后，系统帮忙加到PatchClassloader的
            sharedLibraryLoaders
        -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <meta-data android:value="591d0ae61061d23ca5000dbf" android:name="UMENG_APPKEY"/>
        <meta-data android:value="Main_CN" android:name="UMENG_CHANNEL"/>

        <activity android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action
                    android:name="android.intent.action.MAIN" />
                <category
                    android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".DetailActivity" />
        <activity android:name=".TestCaseListActivity" />

        <!-- 要展示插件中的fragment，所以配成插件进程 -->
        <activity android:name=".TestFragmentActivity"
            android:process=":plugin"/>

        <!-- 要展示插件中的皮肤，所以配成插件进程 -->
        <activity android:name=".TestSkinActivity"
            android:process=":plugin"/>

        <!-- 要展示插件中的View，所以配成插件进程 -->
        <activity android:name=".TestViewActivity"
            android:process=":plugin"/>

        <!-- 要展示插件中的Activity，所以配成插件进程 -->
        <activity android:name=".TestTabActivity"
            android:process=":plugin"/>

        <!-- 微信插件需要支持外部唤起，所有需要在宿主中预注册一个跳板，intentfilte中的STUB_EXACT用来标记这是个跳板 -->
        <activity
            android:name="com.example.pluginmain.wxapi.WXEntryActivity"
            android:process=":plugin"
            android:exported="true">
            <intent-filter>
                <action
                    android:name="${applicationId}.STUB_EXACT" />
                <category
                    android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!-- 名字随便写，只要和自定义的stubMapping匹配上就可-->
        <activity
            android:name="${applicationId}.stub.XXXX"
            android:exported="true"
            android:process=":plugin"
            android:screenOrientation="sensor"
            android:configChanges="orientation"
            android:theme="@android:style/Theme">
        </activity>

        <service android:name=".MainService" />

        <service android:name="com.example.plugintest.service.TestAccessibilitySerivce"
            android:exported="true"
            android:permission='android.permission.BIND_ACCESSIBILITY_SERVICE'
            android:description="@string/access_test"
            android:process=":plugin"
            android:label="@string/access_test">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>
            <intent-filter>
                <action
                    android:name="${applicationId}.STUB_EXACT" />
                <category
                    android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

        <receiver android:name="com.example.plugintest.receiver.BootCompletedReceiver"
            android:exported="true"
            android:process=":plugin">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.ACTION_SHUTDOWN"/>
                <action android:name="test.thirdparty.open"/>
            </intent-filter>
            <intent-filter>
                <action
                    android:name="${applicationId}.STUB_EXACT" />
                <category
                    android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <service android:name=".HostService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.example.HostService" />
            </intent-filter>
        </service>
        
        <!--Demo config for plugin AdMob begin -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="11717000" />

        <meta-data
            android:name="android.support.VERSION"
            android:value="27.0.0" />
        <!--Demo config for plugin AdMob end -->

        <provider
            android:name="com.limpoxe.fairy.core.bridge.ProviderClientUnsafeProxy$ProviderClientUnsafeProxy0"
            android:authorities="a.b.c.fileprovider"
            android:grantUriPermissions="true"
            android:exported="false">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepath" />
        </provider>

        <!-- demo for bridge test -->
        <provider
            android:name="com.limpoxe.fairy.core.bridge.ProviderClientUnsafeProxy$ProviderClientUnsafeProxy1"
            android:authorities="x.y.z.fileprovider"
            android:grantUriPermissions="true"
            android:exported="false">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepath" />
        </provider>
        
        <activity
            android:name="com.example.pluginmain.WebActivity"
            android:exported="true"
            android:process=":plugin">
        </activity>

        <!-- demo for bridge test -->
        <provider
            android:name="com.limpoxe.fairy.core.bridge.ProviderClientUnsafeProxy$ProviderClientUnsafeProxy0"
            android:exported="false"
            android:authorities="game.vewf48s4d8f48ef68th9hr.cf5d8g48e8r6g9rw.fileprovider"
            android:grantUriPermissions="true">

            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepath2" />
        </provider>
        <provider
            android:name="com.limpoxe.fairy.core.bridge.ProviderClientUnsafeProxy$ProviderClientUnsafeProxy1"
            android:exported="false"
            android:authorities="unsafe.proxy.game.vewf48s4d8f48ef68th9hr.cf5d8g48e8r6g9rw.fileprovider"
            android:grantUriPermissions="true">

            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepath2" />
        </provider>
    </application>

</manifest>
